-- prueba con corto y largo
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity Maquina_estados_load_tb is
end Maquina_estados_load_tb;

architecture Behavioral of Maquina_estados_load_tb is
COMPONENT MaquinaDeEstados IS 
 Port(
       Reset, Clk, Corto, Largo, Encendido : IN STD_LOGIC;
       Bomba_Led, Indica_On : OUT STD_LOGIC;
       Estado_out: out STD_LOGIC_VECTOR(2 downto 0);
       tiempo_decenas_salida: out  std_logic_vector(3 downto 0);
       tiempo_unidades_salida: out std_logic_vector(3 downto 0);
       Load_N:out std_logic
   );
END COMPONENT;
SIGNAL Reset_tb: STD_LOGIC:='0';
SIGNAL Clk_tb:STD_LOGIC:= '0';
SIGNAL Corto_tb:STD_LOGIC;
SIGNAL Largo_tb:STD_LOGIC:='0';
SIGNAL Encendido_tb:STD_LOGIC;
SIGNAL Bomba_Led_tb:STD_LOGIC;
SIGNAL Indica_On_tb:STD_LOGIC;
SIGNAL Estado_out_tb:STD_LOGIC_VECTOR(2 downto 0);
SIGNAL Load_N_tb:STD_LOGIC;
SIGNAL tiempo_decenas_salida_tb:std_logic_vector(3 downto 0);
SIGNAL tiempo_unidades_salida_tb: std_logic_vector(3 downto 0);

BEGIN
unidad1: MaquinaDeEstados PORT MAP(
    Reset=>Reset_tb,
    Corto=>Corto_tb,
    Largo=>Largo_tb,
    Clk=>Clk_tb,
    Encendido=>Encendido_tb,
    Bomba_Led=>Bomba_Led_tb,
    Indica_On=>Indica_On_tb, 
    Estado_out=>Estado_out_tb,
    Load_N=>Load_N_tb,
    tiempo_decenas_salida=> tiempo_decenas_salida_tb,
    tiempo_unidades_salida=> tiempo_unidades_salida_tb   
);
Clk_tb <= not Clk_tb after 10 ns;
Encendido_tb<='1' after 50 ns;
Corto_tb<='1' after 100 ns, '0' after 150 ns;
END BEHAVIORAL;
